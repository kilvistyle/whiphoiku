----------------------------------
 CNMV - slim3 model viewwer -
 version : 1.0.13

 kilvistyle@gmail.com
 http://twitter.com/kilvistyle
 http://d.hatena.ne.jp/kilvistyle/
 License : Apache License 2.0
----------------------------------

■概要
slim3で作成したGoogleAppengine for Javaプロジェクト用のシンプルなデータビューアです。
GAEデフォルトのDataViewerよりも便利な機能を搭載しています。

<<主な機能>>
・slim3のModelクラスのCRUD操作
・CSVダウンロード＆アップロード
・指定したエンティティの全件削除

既存のslim3のプロジェクトにCNMVをパッケージすることで、
簡単にプロジェクト内のモデルを使ったデータの操作を行うことができます。
（デモページ：http://cnmv-demo.appspot.com/ ）


■旧バージョンからの移行手順
jarファイル、jspファイル郡、設定ファイルの更新を行って下さい。
web.xmlの更新は不要です。具体的には以下の手順になります。

１）ライブラリの更新
→war/WEB-INF/lib 内の旧cnmv_xxx.jarを削除し、最新に差し替えて下さい。

２）Viewの更新
→war/cn フォルダごと削除し、最新に差し替えて下さい。

３）設定ファイルの更新(cnapp.propertiesをsrcに配置している場合)
→src 内のcnapp.propertiesを削除し、最新に差し替えて下さい。
　設定をカスタマイズしている場合は適宜修正して差し替えて下さい。


■初めて利用する場合の手順
１）ファイル構成の確認
「cnmv_xxx.zip」を展開すると以下のようなファイル群が展開されます。

cnmv
  ├src
  │└cnapp.properties
  │
  ├target
  │├cnmv_xxx.jar
  │└cnmv_xxx_src.jar
  │
  └war
    ├cn
    │ └…
    └WEB-INF
      └web.xml

２）src について
　cnapp.propertiesはCNMV用の設定ファイルです。
　設定を変更したい場合にプロジェクトのsrc直下に配置して下さい。
　（配置しない場合はデフォルト設定値が利用されます）
　
３）target について
　cnmv_xxx.jar がCNMV本体です。
　\war\WEB-INF\lib\cnmv_xxx.jar に配置して下さい。
　cnmv_xxx_src.jar はソースです。
　
４）war について
　・cn 
　　CNMV本体のViewファイル郡です。この構成のまま
　　\war\cn\… となるように配置して下さい。
　
　・WEB-INF\web.xml
　　web.xmlのサンプルです。これを参考に、
　　
　　1. filter              … 25～30行目
　　2. filter-mapping      … 46～55行目
　　3. security-constraint … 124～133行目
　　
　　の３つを、既存のプロジェクトのweb.xmlに追加して下さい。
　　（編集前にweb.xmlのバックアップを取っておくと安心です）

５）稼働確認
ここまでが終わったら、いつも通りプロジェクトをデプロイ、
開発環境であればWebアプリケーションを実行し、以下のURLにアクセスします。

・プロダクション環境の場合
　http://<app-id>.appspot.com/cn/modelview/

・開発環境の場合
　http://localhost:8888/cn/modelview/

管理者アカウントで認証後「CNMV - slim3 model viewer -」が表示されれば準備は完了です。


■使い方
１）モデルのデータ参照
　トップページのモデル一覧からリンクをクリックすることでデータの参照が可能です。
　外部ライブラリなどプロジェクト外のモデルを参照したい場合は、cnapp.propertiesの
　cns3.viewer.externalModelNamesに予め参照したいモデル名を追加しておいて下さい。

　HOT reloadingを利用してModelクラスの新規作成、削除を行った場合は、
　「Models」をクリックすることでモデル一覧がリフレッシュされます。

２）モデルのデータ更新、追加、削除
　１）の手順でモデルデータの一覧を表示した後、各行の右隅にある
　「edit」「delete」をクリックすることで、該当行の更新、削除が行えます。
　新規データの追加は、左下にある「insert」をクリックします。

　<<編集できるプロパティについて>>
　Modelクラスの以下のプロパティを直接編集することが可能です。
　●テキスト
　　・java.lang.String
　●整数
　　・プリミティブ型
　　　short, int, long
　　・ラッパー、オブジェクト型
　　　java.lang.Byte, java.lang.Short, java.lang.Integer, java.lang.Long, java.math.BigInteger
　●浮動小数点数
　　・プリミティブ型
　　　float, double
　　・ラッパー、オブジェクト型
　　　java.lang.Float, java.lang.Double, java.math.BigDecimal
　●日付／時刻
　　・java.util.Date
　●列挙
　　・java.lang.Enum
　●エンティティキー
　　・com.google.appengine.api.datastore.Key
　●配列
　　・上記の型の配列型（例：String[]、int[]、Key[]など）
　　　※配列に限り、プリミティブ型のbyteの配列（byte[]）も扱えます。
　●コレクション型
　　・java.util.List, java.util.Set, java.util.SortedSet
　　　（コレクションの要素は上記ラッパー、オブジェクト型に対応）
　●リレーションシップ
　　・org.slim3.datastore.ModelRef
　●Googleアカウント
　　・com.google.appengine.api.users.User
　●長いテキスト
　　・com.google.appengine.api.datastore.Text
　●カテゴリー
　　・com.google.appengine.api.datastore.Category
　●メールアドレス
　　・com.google.appengine.api.datastore.Email
　●浮動小数点の緯度と経度の座標で表される地点
　　・com.google.appengine.api.datastore.GeoPt
　●URL
　　・com.google.appengine.api.datastore.Link
　●電話番号
　　・com.google.appengine.api.datastore.PhoneNumber
　●郵便番号
　　・com.google.appengine.api.datastore.PostalAddress
　●コンテンツについてユーザーが入力する評価
　　・com.google.appengine.api.datastore.Rating
　
　<<プロパティの編集方法について>>
　●Keyプロパティの入力
　　・プライマリキーは自動採番（allocateId）で生成するか、または「edit primary key」をチェックすることで、
　　　キー文字列（※）、id、nameのいずれかを指定して生成することができます。
　　　
　　・プライマリキー以外のKeyプロパティはキー文字列（※）でのみ指定が可能です。
　　　但し、プライマリキー以外のKeyプロパティは、データストアに存在しないキーを指定して登録することは出来ません。
　　　存在しないキーを指定すると”app <app-id> cannot access app 's data”のエラーが表示されます。
　　
　　　※キー文字列　…　KeyFactory.keyToString( key )にて変換された文字列のこと。
　　
　●Dateプロパティの入力
　　デフォルトでは"yyyy-MM-dd HH:mm:ss"形式で記述します。
　　
　●配列、コレクション型の入力
　　カンマ(,)を要素の区切りとして記述します。
　　・String[]の入力例
　　　aaa,bbb,ccc,…
　　　
　　・List<Date>の入力例
　　　2009-12-10 10:00:00,2009-12-17 12:30:00,…
　　　
　　　但し、要素数が多すぎる配列、コレクションのプロパティを参照した場合は
　　　” too many elements ”と表示され、画面上で要素の中身を参照、編集することが出来ません。

　●リレーションシップ（ModelRef）の入力
　　・ModelRef型のプロパティは、参照先のエンティティのKeyをキー文字列で指定します。
　　　但し、データストアに存在しないキーを指定して登録することは出来ません。
　　　存在しないキーを指定すると”app <app-id> cannot access app 's data”のエラーが表示されます。

　　・InverseModelRef、InverseModelListRef型のプロパティは編集の必要はありません。
　　　（参照元エンティティがある場合、自動的に辿れるようになります）
　
３）CSVダウンロード＆アップロード
　１）の手順でモデルデータの一覧を表示した後、「download」をクリックすることで
　CSV形式でダウンロードが行えます。このCSV形式のまま「upload」をクリックすることでアップロード操作が行えます。
　
　さらに、画面では編集できなかった要素数の多い配列、コレクションプロパティも
　CSVでのダウンロード＆アップロードではデータを扱うことが可能です。
　例えば画像データ（Blob）のバックアップ、ロードなども行うことができます。
　
　<<CSVファイルについて>>
　・デフォルトではエンコードはUTF-8で扱います。
　
　・CSVは、先頭行をmodelのプロパティ名とマッチングするためのヘッダ行とし、
　　２行目以降にデータを記述します。また、ヘッダ行の要素数とデータ行の要素数は
　　必ず一致している必要があります。
　　
　<<アップロードについて>>
　・CSVのヘッダのカラム名とmodelのプロパティ名が、
　　相違しているカラムのデータは無視されて取り込まれます。
　　
　　既存データへのUpdateの場合、取り込まれたカラムのみ更新され、
　　無視されたカラムは既存データを保持します。
　　nullで更新したい場合はカラムのデータをブランクにしてアップロードして下さい。

　・プライマリキーを自動採番してアップロードする場合は、プライマリキー列を削除、
　　またはプライマリキー列のデータをブランクにしてアップロードして下さい。
　
　　但し、プライマリキー以外のKeyプロパティは、データストアに存在しないキーを指定して登録することは出来ません。
　　存在しないキーを指定すると”app <app-id> cannot access app 's data”のエラーが表示されます。

　　
■CNMVが使用するデータストアのKINDについて
CNMVは全件削除とアップロードのタスクを管理するために以下のKINDを利用しますが、増え続けるデータはありません。
　・CnmvTaskInfo　…　全件削除、アップロードの状況を表す一時データ。タスク完了時に削除されます。
　・CnmvFileData　…　アップロードされたファイル情報を表す一時データ。タスク完了時に削除されます。
　・CnmvFileDataFragment　…　アップロードされたファイルデータを表す一時データ。タスク完了時に削除されます。
　（・ViewHistory　…　CNMV_1.0.6.1以前でモデルの表示履歴を表していたデータ。1.0.6.2以降廃止。）


■CNMVの取り外し方
前述の ■準備 で行った変更を元に戻します。具体的には

１）cnmv_xxx.jarを削除する。
２）\war\cn をフォルダごと削除する。
３）\war\WEB-INF\web.xml をバックアップから元に戻す。（追記した３箇所を削除する）
４）AppengineのDataViewerからCNMVが使用しているKINDのEntityを削除する。

以上です。

　　
■免責と一言
本ソフトウェアは自己責任の上でご利用下さい。
これを利用して生じた損失、損害につきまして、kilvistyleは一切責任を負いかねます。

また、利用上バグや要望などにありましたら、文頭のメール、ついったー、
はてなのいずれかにご連絡頂けると幸いです。

感想なども気軽についったーでつぶやいてくれると嬉しいです！follow me！


■更新履歴
・2013/08/19 ver.1.0.13 JDO/JPAに依存しないよう修正。
  ・slim3 1.0.16、App Engine SDK 1.8.0 にて動作確認済み。

・2012/07/17 ver.1.0.12 slim3_1.0.16に対応、ログアウトボタン追加（JSP更新あり）
  ・トップページにログアウトボタンを追加。
  ・slim3 1.0.16に対応。
  ・slim3 1.0.16、App Engine SDK 1.7.0、GWT 2.4.0 にて動作確認済み。

・2011/09/11 ver.1.0.11 slim3 1.0.13に対応
  ・slim3 1.0.13に対応。
  ・slim3 1.0.13、App Engine SDK 1.5.3、GWT 2.4.0にて動作確認済み。

・2011/07/08 ver.1.0.10 機能追加＆バグフィクス（JSP更新あり）
  ・BlobKeyが画面で編集可能になりました。BlobKey#getKeyString()の値を指定します。
  ・Models一覧のソート順をクラス名昇順に変更。
  ・CollectionやArrayプロパティで、編集不可能な要素型なのに画面上編集可能となっていた不具合を修正。
  ・継承関係にあるモデルクラスで親にPK（Key）が定義されている子クラスでのdelete all entitiesが行えなかった不具合を修正。
  ・継承関係にあるモデルクラスで親にPK（Key）が定義されている子クラスでのUploadが親クラスのエンティティとして生成される不具合を修正。
  ・slim3 1.0.12、App Engine SDK 1.5.1、GWT 2.3.0 にて動作確認済み。

・2011/06/09 ver.1.0.9 バグフィクス（JSP更新あり）
  ・継承関係にあるモデルクラスがCNMVで扱えなかった不具合を修正。
  ・AbstractなモデルクラスがModels一覧に表示されていた不具合を修正。
  ・コレクション型プロパティに不正な値が入力された場合のバリデーション不具合を修正。
  ・slim3 1.0.11、App Engine SDK 1.5.0、GWT 2.3.0 にて動作確認済み。

・2011/02/28 ver.1.0.8 仕様変更＆バグフィクス（JSP,CSS更新あり）
  ・CNMVで表示するメッセージをアプリケーションのapplication_xx.propertiesに追加しなくて済むよう修正。
  　（CNMVがアプリケーションのメッセージリソースを汚さなくなり、導入手順もより簡単になりました！）
  ・全件削除、アップロードのタスク完了画面にてModel名入力テキストボックスが表示されていた不具合を修正。
  ・slim3 1.0.8、App Engine SDK 1.4.2、GWT 2.2.0 にて動作確認済み。
  ※slim3 1.0.7はModel、Attribute注釈の保持期間の仕様が変更されているため動作しません。最新の1.0.8をご利用下さい。
  
・2010/12/31 ver.1.0.6.3 バグフィクス
  ・slim3 with GWTの環境で動作しなくなっていた問題を修正。

・2010/12/27 ver.1.0.6.2 slim3_1.0.6対応＆仕様変更（JSP,CSS更新あり）
  ・slim3_1.0.6に対応。
  ・プロジェクト内のモデルを自動的に読み込みトップページに表示するよう仕様変更。
  　外部ライブラリのモデルはcnapp.propertiesにカンマ区切りで追加することで表示可能。
  ・上記変更に伴い、これまでのモデル名入力による表示履歴という一覧方法を廃止。
  　※データストアのKIND=ViewHistoryは本バージョン以降ゴミデータになるので適宜削除して下さい。

・2010/10/06 ver.1.0.6.1 バグフィクス
  ・画面編集不可なプロパティがSerializableをimplementsしていない型の場合、
  　デシリアライズに失敗してアップロードできなかった問題を修正。
  　（主にMapなど、抽象的な型でプロパティを定義している場合に起こる）

・2010/09/18 ver.1.0.6 機能追加＆バグフィクス（JSP更新あり）
  ・主要なGoogle APIオブジェクトのプロパティ編集に対応。
  ・画面編集不可なプロパティでもBlobとして扱いCSVダウンロード＆アップロードに対応。
  ・slim3 with GWTに対応。
  ・空文字で更新してもプロパティをnull更新できない問題を修正。

・2010/09/09 ver.1.0.5 機能追加＆バグフィクス（JSP更新あり）
  ・新規登録時にプライマリキーをキー文字列、id、nameから生成可能に。
  ・リレーションシップ（ModelRef）の編集機能を追加。
  ・リレーションシップを辿る画面遷移を追加。
  ・ページングのカーソル対応。1000件目以降のページ遷移が可能に。
  ・アップロード失敗時に、正しく失敗メッセージが表示されないことがある問題を修正。
  ・特定のプロパティ名を持つモデルが正しく更新できない問題を修正。

・2010/06/21 ver.1.0.4.1 バックグラウンド処理の表示改善
  ・全エンティティ削除、アップロード時の進行状況を自動更新して表示するよう変更

・2010/06/20 ver.1.0.4 slim3_1.0.4に対応
  ・csvアップロード時のバリデーションを廃止
  ・各モデル毎に全エンティティを削除する「delete all entities」機能を追加。（JSP更新あり）
  ・10MBまでのファイルアップロードに対応。（TQによりバックグラウンドで実行）（JSP更新あり）
  ※CPUTime節約の為アップロード時のGTX廃止。（失敗直前まで取り込み）

・2010/05/03 ver.1.0.1 最新のslim3(ver_1.0.3)に対応
  ・ModelMetaクラスの変更に伴う再ビルド。（getClassHierarchyListName()の追加など）

・2010/04/16 ver.1.0.0 最新のslim3(ver_1.0.1)に対応
  ・slim3のデフォルトポリシーに合せ、sessionを利用しないよう変更。
  ・CSVアップロードのGTX対応。（all or nothingに変更）

・2010/01/23 ver.0.1.6 バグフィクス
  ・特定の条件下で上書き更新ができなくなっていた問題を修正。

・2010/01/22 ver.0.1.5 バグフィクス（JSP更新）
  ・modelのプライマリキーのプロパティ名が"key"以外の場合に上書き更新できない不具合を修正。

・2010/01/16 ver.0.1.4 slim3最新化対応＆JSP修正。
  ・現時点の最新版slim3に対応。一部JSPファイルの修正。

・2010/01/04 ver.0.1.3 バグフィクス
  ・serialVersionUIDを持つモデルの更新が行えなかった不具合を修正。 

・2009/12/29 ver.0.1.2 slim3更新に伴う修正
  ・現時点の最新版slim3に対応。requestScope(null)の挙動変更に伴う修正。 

・2009/12/11 ver.0.1.1 機能追加
  ・スタート画面にモデルの表示履歴を追加。一度入力したモデル名は一覧からアクセス可能です。

・2009/12/09 ver.0.1.0 安定版リリース
  ・一部のプリミティブ型、フィールドで初期化しているプロパティでクラスキャストエラー問題を修正。
  ・プロパティ名の並び順を、modelクラスのプロパティ定義順になるよう修正。
  ・lob=trueのString型の入力フォームをtextareaに変更。
  ・その他、ソース見直し。

・2009/12/08 ver.0.0.9 バグフィクス
  ・コレクション型のジェネリック型のプルダウン選択を廃止。自動識別されるよう修正。
  ・cssの見直し。

・2009/12/07 ver.0.0.8 初公開
